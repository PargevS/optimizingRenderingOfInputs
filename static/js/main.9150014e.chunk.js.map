{"version":3,"sources":["components/Input/Input.js","components/Input/index.js","components/Total/Total.js","components/Total/index.js","App.js","index.js"],"names":["Input","idName","elClassName","labelText","attrs","classes","classNames","console","log","className","name","type","defaultProps","React","memo","prevProps","nextProps","value","Total","data","useState","total","setTotal","useEffect","length","sum","forEach","item","App","field1Value","setField1Value","field2Value","setField2Value","field3Value","setField3Value","field4Value","setField4Value","field5Value","setField5Value","onInput","e","parseFloat","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAMMA,EAAQ,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,OAASC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,UAAcC,EAAW,oDACrDC,EAAUC,IAAW,gBAAiBJ,GAK5C,OAHAK,QAAQC,IAAIP,GAIR,qBAAKQ,UAAWJ,EAAhB,SACI,kCACI,+BAAOF,IACP,mCAAOO,KAAMT,EAASU,KAAK,QAAWP,UAetDJ,EAAMY,aAAe,CACjBV,YAAa,GACbC,UAAW,IAGAU,ICjCAb,EDiCAa,IAAMC,KAAKd,GAAO,SAACe,EAAWC,GACzC,GAAID,EAAUE,QAAUD,EAAUC,MAAO,OAAO,KEhC9CC,G,YAAQ,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAAU,EACIC,mBAAS,GADb,mBACfC,EADe,KACRC,EADQ,KAatB,OAVAC,qBAAU,WACN,GAAGJ,EAAKK,OAAO,CACX,IAAIC,EAAM,EACVN,EAAKO,SAAQ,SAAAC,GAAI,OAAIF,GAAOE,KAC5BL,EAASG,GACTlB,QAAQC,IAAI,WAAYiB,MAE7B,CAACN,IAIA,sBAAKV,UAAU,QAAf,4CAAsD,+BAAOY,SAKrEH,EAAMN,aAAe,CAACO,KAAM,IAEbD,ICvBAA,EDuBAA,EEqBAU,MAzCf,WAAgB,IAAD,EAC2BR,mBAAS,GADpC,mBACJS,EADI,KACSC,EADT,OAE2BV,mBAAS,GAFpC,mBAEJW,EAFI,KAESC,EAFT,OAG2BZ,mBAAS,GAHpC,mBAGJa,EAHI,KAGSC,EAHT,OAI2Bd,mBAAS,GAJpC,mBAIJe,EAJI,KAISC,EAJT,OAK2BhB,mBAAS,GALpC,mBAKJiB,EALI,KAKSC,EALT,KAkBX,OAHA/B,QAAQC,IAAI,wCAIR,qBAAKC,UAAU,MAAf,SAEI,sBAAKA,UAAU,OAAf,UAEI,cAAC,EAAD,CAAOU,KAAM,CAACU,EAAaE,EAAaE,EAAaE,EAAaE,KAElE,cAAC,EAAD,CAAOpC,OAAQ,UAAWC,YAAY,YAAYS,KAAK,SAASM,MAAOY,EAChEU,QAlBQ,SAACC,GAAD,OAAOV,EAAeW,WAAWD,EAAEE,OAAOzB,SAkBzBd,UAAU,kBAC1C,cAAC,EAAD,CAAOF,OAAQ,UAAWC,YAAY,YAAYS,KAAK,SAASM,MAAOc,EAChEQ,QAnBQ,SAACC,GAAD,OAAOR,EAAeS,WAAWD,EAAEE,OAAOzB,SAmBzBd,UAAU,kBAC1C,cAAC,EAAD,CAAOF,OAAQ,UAAWC,YAAY,YAAYS,KAAK,SAASM,MAAOgB,EAChEM,QApBQ,SAACC,GAAD,OAAON,EAAeO,WAAWD,EAAEE,OAAOzB,SAoBzBd,UAAU,kBAC1C,cAAC,EAAD,CAAOF,OAAQ,UAAWC,YAAY,YAAYS,KAAK,SAASM,MAAOkB,EAChEI,QArBQ,SAACC,GAAD,OAAOJ,EAAeK,WAAWD,EAAEE,OAAOzB,SAqBzBd,UAAU,kBAC1C,cAAC,EAAD,CAAOF,OAAQ,UAAWC,YAAY,YAAYS,KAAK,SAASM,MAAOoB,EAChEE,QAtBQ,SAACC,GAAD,OAAOF,EAAeG,WAAWD,EAAEE,OAAOzB,SAsBzBd,UAAU,wBCjC1DwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9150014e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n//* import of components and developer packages\r\nimport './Input.scss';\r\n\r\nconst Input = ({idName,  elClassName, labelText, ...attrs}) => {\r\n    const classes = classNames('input-wrapper', elClassName);\r\n\r\n    console.log(idName);\r\n\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <label>\r\n                <span>{labelText}</span>\r\n                <input name={idName}  type=\"text\" {...attrs}/>\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nInput.propTypes = {\r\n    idName: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]).isRequired,\r\n    elClassName: PropTypes.string,\r\n    labelText: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n    elClassName: '',\r\n    labelText: '',\r\n};\r\n\r\nexport default React.memo(Input, (prevProps, nextProps) => {\r\n    if (prevProps.value === nextProps.value) return true\r\n});","import Input from \"./Input\";\r\n\r\n\r\nexport default Input;","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n//* import of components and developer packages\r\nimport './Total.scss';\r\n\r\nconst Total = ({data}) => {\r\n    const [total, setTotal] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if(data.length){\r\n            let sum = 0;\r\n            data.forEach(item => sum += item)\r\n            setTotal(sum);\r\n            console.log('Total = ', sum)\r\n        }\r\n    }, [data])\r\n\r\n\r\n    return (\r\n        <div className=\"total\">Sum of the addition of fields: <span>{total}</span></div>\r\n    );\r\n};\r\n\r\nTotal.propTypes = {data: PropTypes.array};\r\nTotal.defaultProps = {data: []};\r\n\r\nexport default Total;","import Total from \"./Total\";\r\n\r\n\r\nexport default Total;","import React, {useState, useEffect} from 'react';\n//* import of components and developer packages\nimport Input from \"./components/Input\";\nimport './App.scss';\nimport Total from \"./components/Total\";\n\nfunction App() {\n    const [field1Value, setField1Value] = useState(0);\n    const [field2Value, setField2Value] = useState(0);\n    const [field3Value, setField3Value] = useState(0);\n    const [field4Value, setField4Value] = useState(0);\n    const [field5Value, setField5Value] = useState(0);\n\n\n    const changeField1 = () => (e) => setField1Value(parseFloat(e.target.value));\n    const changeField2 = () => (e) => setField2Value(parseFloat(e.target.value));\n    const changeField3 = () => (e) => setField3Value(parseFloat(e.target.value));\n    const changeField4 = () => (e) => setField4Value(parseFloat(e.target.value));\n    const changeField5 = () => (e) => setField5Value(parseFloat(e.target.value));\n\n\n    console.log('***** app component rendering ******')\n\n\n    return (\n        <div className=\"App\">\n\n            <div className=\"form\">\n                {/*<div className=\"total\">Total: {total}</div>*/}\n                <Total data={[field1Value, field2Value, field3Value, field4Value, field5Value]}/>\n\n                <Input idName={'field-1'} elClassName='form-item' type='number' value={field1Value}\n                       onInput={changeField1()} labelText='Entry field 1'/>\n                <Input idName={'field-2'} elClassName='form-item' type='number' value={field2Value}\n                       onInput={changeField2()} labelText='Entry field 2'/>\n                <Input idName={'field-3'} elClassName='form-item' type='number' value={field3Value}\n                       onInput={changeField3()} labelText='Entry field 3'/>\n                <Input idName={'field-4'} elClassName='form-item' type='number' value={field4Value}\n                       onInput={changeField4()} labelText='Entry field 4'/>\n                <Input idName={'field-5'} elClassName='form-item' type='number' value={field5Value}\n                       onInput={changeField5()} labelText='Entry field 5'/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}